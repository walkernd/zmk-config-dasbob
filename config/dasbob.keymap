#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        mouse_up: mouse_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp W>;

            label = "MOUSE_UP";
        };

        mouse_down: mouse_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MOUSE_DOWN";
        };

        mouse_left: mouse_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MOUSE_LEFT";
        };

        mouse_right: mouse_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "MOUSE_RIGHT";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <3 2>;
        };

        layer-zero {
            bindings = <&to 0>;
            key-positions = <20 21>;
        };

        layer-2 {
            bindings = <&to 2>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own

        Base {
            bindings = <
&kp Q           &kp W  &kp F  &kp P            &kp G          &kp J      &kp L      &kp U              &kp P    &kp SEMI
&mt LEFT_GUI A  &kp R  &kp S  &kp T            &kp D          &kp H      &kp N      &kp E              &kp I    &kp O
&kp Z           &kp X  &kp C  &kp V            &kp B          &kp K      &kp M      &kp COMMA          &kp DOT  &kp SLASH
                       &mo 1  &sk RIGHT_SHIFT  &kp BACKSPACE  &kp ENTER  &kp SPACE  &kp RIGHT_CONTROL
            >;
        };

        Num {
            bindings = <
&kp NUMBER_1          &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                 &kp NUMBER_6     &kp N7     &kp N8             &kp N9     &kp N0
&kp NON_US_BACKSLASH  &none         &key_repeat   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp EQUAL  &kp UP_ARROW       &none      &kp SINGLE_QUOTE
&kp TILDE             &none         &none         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT_SIGN      &kp LEFT   &kp DOWN_ARROW     &kp RIGHT  &kp MINUS
                                    &to 0         &sk LEFT_SHIFT        &kp BACKSPACE          &kp ENTER        &kp SPACE  &kp RIGHT_CONTROL
            >;
        };

        Sym {
            bindings = <
&none              &none  &none   &none   &none      &kp F1   &kp F2   &kp F3   &kp F4   &kp F5
&kp K_VOLUME_UP    &none  &none   &none   &none      &kp F6   &kp F7   &kp F8   &kp F9   &kp F10
&kp K_VOLUME_DOWN  &none  &none   &none   &none      &kp F11  &kp F12  &kp F13  &kp F14  &kp F15
                          &trans  &trans  &kp LSHFT  &trans   &trans   &trans
            >;
        };

        Misc {
            bindings = <
&trans  &trans  &trans  &kp LS(Z)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LS(Y)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };
    };
};

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    macros {
        repeat: repeat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_4>;
            label = "REPEAT";
        };

        snip: snip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp LEFT_GUI &kp S>;
            label = "SNIP";
        };

        lock: lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI &kp L>;
            label = "LOCK";
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <3 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own

        Base {
            bindings = <
&kp Q  &kp W  &kp F  &kp P            &kp G          &kp J      &kp L      &kp U              &kp P    &kp SEMI
&kp A  &kp R  &kp S  &kp T            &kp D          &kp H      &kp N      &kp E              &kp I    &kp O
&kp Z  &kp X  &kp C  &kp V            &kp B          &kp K      &kp M      &kp COMMA          &kp DOT  &kp SLASH
              &mo 1  &sk RIGHT_SHIFT  &kp BACKSPACE  &kp ENTER  &kp SPACE  &kp RIGHT_CONTROL
            >;
        };

        Num {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4          &kp N5                 &kp NUMBER_6     &kp N7     &kp N8             &kp N9     &kp N0
&none         &none         &none         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCLAMATION  &kp EQUAL  &kp UP_ARROW       &none      &none
&none         &none         &none         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT_SIGN      &kp LEFT   &kp DOWN_ARROW     &kp RIGHT  &trans
                            &to 0         &sk LEFT_SHIFT        &kp BACKSPACE          &kp ENTER        &kp SPACE  &kp RIGHT_CONTROL
            >;
        };

        Sym {
            bindings = <
&kp DOUBLE_QUOTES  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LC(X)         &kp LC(C)  &kp UP         &kp LC(V)  &trans
&kp LS(NUMBER_1)   &kp LS(NUMBER_2)      &kp LS(NUMBER_3)       &kp LS(NUMBER_4)  &kp LS(N5)         &kp SINGLE_QUOTE  &kp LEFT   &kp DOWN       &kp RIGHT  &trans
&kp LS(NUMBER_6)   &kp LS(N7)            &kp LS(N8)             &kp LS(N9)        &kp LS(N0)         &kp MINUS         &kp EQUAL  &kp BACKSLASH  &kp GRAVE  &trans
                                         &trans                 &trans            &kp LSHFT          &trans            &trans     &trans
            >;
        };

        Misc {
            bindings = <
&trans  &trans  &trans  &kp LS(Z)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp LS(Y)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans     &trans  &trans  &trans  &trans
            >;
        };
    };
};
